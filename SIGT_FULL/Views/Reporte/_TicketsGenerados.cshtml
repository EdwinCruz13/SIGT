<h4>
    <small class="pull-left" style="color:#9e9e9e"><i class="glyphicon glyphicon-file"></i> <b>Total de tickets</b></small>
    <small class="pull-right" style="color:#9e9e9e"><i class="glyphicon glyphicon-signal"></i></small>
    <span class="clearfix"></span>
</h4>

<hr />


<div id="LinealGraphArea" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<script>
    $(document).ready(function () {
        var renderGraph;
        InitializeComponent();

        function InitializeComponent() {
            $.ajax({
                url: "@Url.Action("_LinealGraph_TicketsAreas", "Reporte")" + "?fi=" + '@ViewBag.fi' + "&ff=" + '@ViewBag.ff',
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result === undefined || result === null) {
                        renderGraph.destroy();
                        alert("No existen datos encontrados en ese rango de fecha");
                    }
                    else {

                        LinealGraph(result);
                    }

                },
                beforeSend: function () {
                    $(".load-img").css("display", "block");
                },
                complete: function () {
                    $(".load-img").css("display", "none");
                    $(".highcharts-legend").css("display", "none");
                },
                error: function () {
                    alert("Error al cargar grafica");
                }
            });


        }

        //crear gráfica
        function LinealGraph(lista) {
            //declarar un arreglo y declara objeto
            var Series = [];
            var Series2 = [];
            var Usuario = new Object();


            //declarar las opciones del gráfico de barra
            var options = {
                chart: { renderTo: 'LinealGraphArea', scrollablePlotArea: { minWidth: 700 }},
                title: { text: 'Total de tickets atendidos' },
                subtitle: { text: 'Del ' + FechaInicio + ' al ' + FechaFin },
                xAxis: {
                    type: 'datetime', dateTimeLabelFormats: { month: '%e. %b', year: '%b' }, title: { text: 'Rango de tiempo' },
                    tickInterval: 1 * 24 * 3600 * 1000, // cada dia
                    tickWidth: 0,
                    gridLineWidth: 1,
                    labels: {
                        align: 'left',
                        x: 3,
                        y: -3
                    }
                },
                yAxis: [{ title: { text: 'Tickets atendidos' }, labels: { align: 'left', x: 3, y: 20, format: '{value:.,0f}' }, showFirstLabel: false }],
                credits: {
                    enabled: false
                },
                plotOptions: {
                    line: {
                        dataLabels: {
                            enabled: true,
                            crop: false,
                            inside: false,
                            overflow: 'none'
                        },
                        enableMouseTracking: true
                    },
                    series: {
                        cursor: 'pointer',
                        point: {
                            events: { }
                        },
                        marker: { lineWidth: 1 }
                    }
                },

                legend: {
                    enabled: true,
                    align: 'right',
                    verticalAlign: 'bottom',
                    borderWidth: 0
                },

                tooltip: { shared: true, crosshairs: true },

                series: [
                    {
                        name: 'Préstamos',
                        lineWidth: 2,
                        marker: { radius: 4 },
                        data: []
                    },

                    {
                        name: 'Recuperaciones',
                        lineWidth: 2,
                        marker: { radius: 4 },
                        data: []
                    }
                ]
            };


            //crear la serie
            lista.prestamos.forEach(function (value, index) {
                var date = new Date(value.Fecha)
                var now_utc = Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());
                Series.push([now_utc, value.Total]);

            });

            lista.recuperaciones.forEach(function (value, index) {
                var date = new Date(value.Fecha)
                var now_utc = Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());
                Series2.push([now_utc, value.Total]);

            });


            //crear la grafica y agregar los series o puntos a gráficar
            options.series[0].data = Series;
            options.series[1].data = Series2;
            options.plotOptions.series.point.events = { click: function (e) { hs.htmlExpand(null, { pageOrigin: { x: e.pageX || e.clientX, y: e.pageY || e.clientY }, headingText: this.series.name, maincontentText: Highcharts.dateFormat('%A, %b %e, %Y', this.x) + ':<br/> ' + this.y + ' areas', width: 200 }) }}
            renderGraph = new Highcharts.Chart(options);


        }
    });
</script>







